---
title: "L09 Themes"
subtitle: "Data Visualization (STAT 302)" 
author: "JULIANNA WANG"
pagetitle: "L09 JULIANNA WANG"
date: today

format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    code-fold: show
    link-external-newwindow: true
    fig-dpi: 300

execute:
  warning: false

from: markdown+emoji 
---

## Overview

The goal of this lab is to play around with the theme options in `ggplot2`.


## Datasets

We'll be using the `cdc.txt` and `NU_admission_data.csv` datasets.

```{r}
#| label: load-pkgs-data

# load package(s)
library(tidyverse)
library(patchwork)
library(cowplot)
library(ggthemes)
library(sysfonts)

# read in the cdc dataset
cdc <- read_delim(file = "data/cdc.txt", delim = "|") |>
  mutate(
    genhlth = factor(
      genhlth,
      levels = c("excellent", "very good", "good", "fair", "poor"),
      labels = c("Excellent", "Very Good", "Good", "Fair", "Poor")
      )
    )

# read in NU admission data
admin_data <- read_csv(file = 'data/NU_admission_data.csv') |>
  janitor::clean_names()

# set seed
set.seed(2468)

# selecting a random subset of size 100
cdc_small <- cdc |> 
  slice_sample(n = 100)
```

## Exercise 1

Use the `cdc_small` dataset to explore several pre-set `ggthemes`. The code below constructs the familiar scatterplot of `weight` by `height` and stores it in `plot_01`. Display `plot_01` to observe the default theme. **Explore/apply, and display at least 7 other pre-set themes** from the `ggplot2` or `ggthemes` package. Don't worry about making adjustments to the figures under the new themes. Just get a sense of what the themes are doing to the original figure `plot_01`. 

There should be at least 8 plots for this task, `plot_01` is pictured below. Use `patchwork` or `cowplot` in combination with R yaml chunk options `fig-height` and `fig-width` (`out-width` and `fig-align` may be useful as well) to setup the 8 plots together in a user friendly arrangement. 

```{r}
#| label: ex-1-base-plot 
#| fig-width: 4
#| fig-height: 5
#| out.width: '50%'

# plot
plot_01 <- ggplot(
  data = cdc_small,
  aes(x = height, y = weight)
) +
  geom_point(size = 3, aes(shape = genhlth, color = genhlth)) +
  scale_y_continuous(
    name = "Weight in Pounds",
    limits = c(100, 275),
    breaks = seq(100, 275, 25),
    trans = "log10",
    labels = scales::label_number(
      accuracy = 1,
      suffix = " lbs"
    )
  ) +
  scale_x_continuous(
    name = "Height in Inches",
    limits = c(60, 80),
    breaks = seq(60, 80, 5),
    labels = scales::label_number(accuracy = 1, suffix = " in")
  ) +
  scale_shape_manual(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    values = c(17, 19, 15, 9, 4)
  ) +
  scale_color_brewer(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    palette = "Set1"
  ) +
  theme(
    legend.position = c(1, 0),
    legend.justification = c(1, 0)
  ) +
  labs(title = "CDC BRFSS: Weight by Height")
```

::: {.callout-tip icon=false}

## Solution

```{r}
#| label: ex-1-plot-2
#| fig-height: 10
#| fig.align: 'center'
#| out.width: '50%'

# using theme_wsj(), which formats the plot to look like Wall Street Journal's graphics

plot_02 <- ggplot(
  data = cdc_small,
  aes(x = height, y = weight)
) +
  geom_point(size = 3, aes(shape = genhlth, color = genhlth)) +
  scale_y_continuous(
    name = "Weight in Pounds",
    limits = c(100, 275),
    breaks = seq(100, 275, 25),
    trans = "log10",
    labels = scales::label_number(
      accuracy = 1,
      suffix = " lbs"
    )
  ) +
  scale_x_continuous(
    name = "Height in Inches",
    limits = c(60, 80),
    breaks = seq(60, 80, 5),
    labels = scales::label_number(accuracy = 1, suffix = " in")
  ) +
  scale_shape_manual(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    values = c(17, 19, 15, 9, 4)
  ) +
  scale_color_brewer(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    palette = "Set1"
  ) +
  theme(
    legend.position = c(1, 0),
    legend.justification = c(1, 0)
  ) +
  labs(title = "CDC BRFSS: Weight by Height, theme_wsj") + 
  theme_economist()
```

```{r}
#| label: ex-1-plot-3

# using theme_par(), which applies base R graphics's graphical parameters

plot_03 <- ggplot(
  data = cdc_small,
  aes(x = height, y = weight)
) +
  geom_point(size = 3, aes(shape = genhlth, color = genhlth)) +
  scale_y_continuous(
    name = "Weight in Pounds",
    limits = c(100, 275),
    breaks = seq(100, 275, 25),
    trans = "log10",
    labels = scales::label_number(
      accuracy = 1,
      suffix = " lbs"
    )
  ) +
  scale_x_continuous(
    name = "Height in Inches",
    limits = c(60, 80),
    breaks = seq(60, 80, 5),
    labels = scales::label_number(accuracy = 1, suffix = " in")
  ) +
  scale_shape_manual(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    values = c(17, 19, 15, 9, 4)
  ) +
  scale_color_brewer(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    palette = "Set1"
  ) +
  theme(
    legend.position = c(1, 0),
    legend.justification = c(1, 0)
  ) +
  labs(title = "CDC BRFSS: Weight by Height, theme_par") + 
  theme_par()
```

```{r}
#| label: ex-1-plot-4
#| fig-width: 4
#| fig-height: 5
#| out.width: '50%'

# using theme_minimal()

plot_04 <- ggplot(
  data = cdc_small,
  aes(x = height, y = weight)
) +
  geom_point(size = 3, aes(shape = genhlth, color = genhlth)) +
  scale_y_continuous(
    name = "Weight in Pounds",
    limits = c(100, 275),
    breaks = seq(100, 275, 25),
    trans = "log10",
    labels = scales::label_number(
      accuracy = 1,
      suffix = " lbs"
    )
  ) +
  scale_x_continuous(
    name = "Height in Inches",
    limits = c(60, 80),
    breaks = seq(60, 80, 5),
    labels = scales::label_number(accuracy = 1, suffix = " in")
  ) +
  scale_shape_manual(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    values = c(17, 19, 15, 9, 4)
  ) +
  scale_color_brewer(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    palette = "Set1"
  ) +
  theme(
    legend.position = c(1, 0),
    legend.justification = c(1, 0)
  ) +
  labs(title = "CDC BRFSS: Weight by Height, theme_minimal") + 
  theme_minimal()
```

```{r}
#| label: ex-1-plot-5
#| fig-width: 4
#| fig-height: 5
#| out.width: '50%'

# using theme_fivethirtyeight(), which uses the style of the graphs of the FiveThirtyEight website

plot_05 <- ggplot(
  data = cdc_small,
  aes(x = height, y = weight)
) +
  geom_point(size = 3, aes(shape = genhlth, color = genhlth)) +
  scale_y_continuous(
    name = "Weight in Pounds",
    limits = c(100, 275),
    breaks = seq(100, 275, 25),
    trans = "log10",
    labels = scales::label_number(
      accuracy = 1,
      suffix = " lbs"
    )
  ) +
  scale_x_continuous(
    name = "Height in Inches",
    limits = c(60, 80),
    breaks = seq(60, 80, 5),
    labels = scales::label_number(accuracy = 1, suffix = " in")
  ) +
  scale_shape_manual(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    values = c(17, 19, 15, 9, 4)
  ) +
  scale_color_brewer(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    palette = "Set1"
  ) +
  theme(
    legend.position = c(1, 0),
    legend.justification = c(1, 0)
  ) +
  labs(title = "CDC BRFSS: Weight by Height, theme_fivethirtyeight") + 
  theme_fivethirtyeight()
```

```{r}
#| label: ex-1-plot-6
#| fig-width: 4
#| fig-height: 5
#| out.width: '50%'

# using theme_tufte(), which uses the principles identified in Edward Tufte's book 
    #"The Visual Display of Quantitative Information" 

plot_06 <- ggplot(
  data = cdc_small,
  aes(x = height, y = weight)
) +
  geom_point(size = 3, aes(shape = genhlth, color = genhlth)) +
  scale_y_continuous(
    name = "Weight in Pounds",
    limits = c(100, 275),
    breaks = seq(100, 275, 25),
    trans = "log10",
    labels = scales::label_number(
      accuracy = 1,
      suffix = " lbs"
    )
  ) +
  scale_x_continuous(
    name = "Height in Inches",
    limits = c(60, 80),
    breaks = seq(60, 80, 5),
    labels = scales::label_number(accuracy = 1, suffix = " in")
  ) +
  scale_shape_manual(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    values = c(17, 19, 15, 9, 4)
  ) +
  scale_color_brewer(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    palette = "Set1"
  ) +
  theme(
    legend.position = c(1, 0),
    legend.justification = c(1, 0)
  ) +
  labs(title = "CDC BRFSS: Weight by Height, theme_tufte") + 
  theme_tufte()
```

```{r}
#| label: ex-1-plot-7
#| fig-width: 4
#| fig-height: 5
#| out.width: '50%'

# using theme_dark()

plot_07 <- ggplot(
  data = cdc_small,
  aes(x = height, y = weight)
) +
  geom_point(size = 3, aes(shape = genhlth, color = genhlth)) +
  scale_y_continuous(
    name = "Weight in Pounds",
    limits = c(100, 275),
    breaks = seq(100, 275, 25),
    trans = "log10",
    labels = scales::label_number(
      accuracy = 1,
      suffix = " lbs"
    )
  ) +
  scale_x_continuous(
    name = "Height in Inches",
    limits = c(60, 80),
    breaks = seq(60, 80, 5),
    labels = scales::label_number(accuracy = 1, suffix = " in")
  ) +
  scale_shape_manual(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    values = c(17, 19, 15, 9, 4)
  ) +
  scale_color_brewer(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    palette = "Set1"
  ) +
  theme(
    legend.position = c(1, 0),
    legend.justification = c(1, 0)
  ) +
  labs(title = "CDC BRFSS: Weight by Height, theme_dark") + 
  theme_dark()
```

```{r}
#| label: ex-1-plot-8
#| fig-width: 4
#| fig-height: 5
#| out.width: '50%'

# using theme_solarized()

plot_08 <- ggplot(
  data = cdc_small,
  aes(x = height, y = weight)
) +
  geom_point(size = 3, aes(shape = genhlth, color = genhlth)) +
  scale_y_continuous(
    name = "Weight in Pounds",
    limits = c(100, 275),
    breaks = seq(100, 275, 25),
    trans = "log10",
    labels = scales::label_number(
      accuracy = 1,
      suffix = " lbs"
    )
  ) +
  scale_x_continuous(
    name = "Height in Inches",
    limits = c(60, 80),
    breaks = seq(60, 80, 5),
    labels = scales::label_number(accuracy = 1, suffix = " in")
  ) +
  scale_shape_manual(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    values = c(17, 19, 15, 9, 4)
  ) +
  scale_color_brewer(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    palette = "Set1"
  ) +
  theme(
    legend.position = c(1, 0),
    legend.justification = c(1, 0)
  ) +
  labs(title = "CDC BRFSS: Weight by Height, theme_solarized") + 
  theme_solarized()
```

```{r}
#| label: ex-1-plot-formatting
#| fig-width: 35
#| fig-height: 15

plots <- plot_grid(plot_01, plot_02, plot_03, plot_04, plot_05, plot_06, plot_07, plot_08,
                   ncol = 4, align = "hv", rel_widths = c(1, 1, 1, 1), rel_heights = c(0.5, 0.5))
plots
```

:::

:::{.callout-important}
**Which theme or themes do you particularly like? Why?**
:::

::: {.callout-tip icon=false}

## Solution

I enjoy using theme_minimal() a lot. I like how simple and sleek it looks. I'm personally not a fan of the grey background that comes with the normal ggplot() setup, the light grey and the white line combination makes it hard on the eyes. If someone wants a grey background, then I would suggest using ggthemes' theme_fivethirtyeight(), which is kind of like the regular setup but the entire graph's background is grey. Plus there are no white lines. ggthemes' theme_par() is a new theme that I like as well. I think it could be quite useful at looking at general trends where the specific values of datapoints aren't exactly necessary in order to understand how the data behaves overall. In general I like themes where there is a stark contrast in the graph's background color and the color of the grid the data points are on. I especially prefer lighter color background plus a darker color grid. 
:::

## Exercise 2

Using `plot_01` from Exercise 1 and the `theme()` function, attempt to construct the ugliest plot possible (example pictured below). Be creative! It should NOT look exactly like the example. Since the goal is to understand a variety of adjustments, you should use a **minimum** of 10 different manual adjustments within `theme()`.

::: {.callout-tip icon=false}

## Solution

```{r}
#| label: ex-2-plot

# plot
ggplot(
  data = cdc_small,
  aes(x = height, y = weight)
) +
  geom_point(size = 3, aes(shape = genhlth, color = genhlth)) +
  scale_y_continuous(
    name = "Weight in Pounds",
    limits = c(100, 275),
    breaks = seq(100, 275, 25),
    trans = "log10",
    labels = scales::label_number(
      accuracy = 1,
      suffix = " lbs"
    )
  ) +
  scale_x_continuous(
    name = "Height in Inches",
    limits = c(60, 80),
    breaks = seq(60, 80, 5),
    labels = scales::label_number(accuracy = 1, suffix = " in")
  ) +
  scale_shape_manual(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    values = c(17, 19, 15, 9, 4)
  ) +
  scale_color_brewer(
    name = "Health?",
    labels = c(
      "Excellent", "Very Good",
      "Good", "Fair", "Poor"
    ),
    palette = "Set1"
  ) +
  labs(title = "CDC BRFSS: Weight by Height") + 
  theme(
    legend.position = c(1, 0),
    legend.justification = c(1, 0),
    plot.title = element_text(color = '#ff69b4', size = 25, face = c('italic', 'bold'), family = 'Comic Sans MS'),
    axis.text = element_text(color = '#4E2A84', size = 10, face = 'bold', family = 'Wingdings'),
    panel.background = element_rect(fill = '#a1b996'), 
    panel.grid.major = element_line(color = '#722644', linetype = 'dotdash', size = 2),
    panel.grid.minor = element_line(color = '#2c8190', linetype = 'twodash', size = 2),
    axis.title = element_text(color = '#cc5500', size = 15, face = 'bold', family = 'Comic Sans MS'), 
    legend.title = element_text(color = '#ff69b4', family = 'Comic Sans MS'), 
    legend.text = element_text(color = '#1b0a5f', family = 'Papyrus'),
    plot.background = element_rect(fill = '#89cff0'),
    legend.background = element_rect(fill = '#f3f12b'),
  ) 
```

:::

## Exercise 3

We will be making use of your code from Exercise 3 on *L07 Layers*. Using the `NU_admission_data.csv` you created two separate plots derived from the single plot depicted in `undergraduate-admissions-statistics.pdf`. Style these plots so they follow a "Northwestern" theme. You are welcome to display the plots separately OR design a layout that displays both together (likely one stacked above the other). 

Check out the following webpages to help create your Northwestern theme:

- [Visual Identity](https://www.northwestern.edu/brand/visual-identity/index.html)
- [Color Palettes](https://www.northwestern.edu/brand/visual-identity/color-palettes/index.html)
- [Fonts & Typography](https://www.northwestern.edu/brand/visual-identity/fonts-typography/index.html) --- Need to use [substitute fonts](https://www.northwestern.edu/brand/visual-identity/fonts-typography/substitute-fonts/index.html)

**Additional requirement:**

Use a free non-standard font from google for the title. Pick one that looks similar to a Northwestern font.

:::{.callout-note}
I find this [blog post](https://cran.rstudio.com/web/packages/showtext/vignettes/introduction.html) to be extremely useful for adding fonts. Important packages for using non-standard fonts are `showtext`, `extrafont`, `extrafontdb`, and `sysfonts`. The last 3 generally just need to be installed (not loaded per session).
:::

::: {.callout-tip icon=false}

## Solution

```{r}
#| label: exercise-3-barplot
#| fig-width: 9
#| fig_height: 4

# data wrangling
bar_data <- admin_data |> 
  select(-contains('_rate')) |> # - contains() == select all column that does not contain '_rate'
  pivot_longer(
    cols = -year,
    names_to = 'category',
    values_to = 'value'
  ) |>
  mutate(
    bar_labels = prettyNum(value, big.interval = ',')
  )

# building the plot
bar_plot <- bar_data |>
  filter (year >= 2002) |>
  ggplot(aes(year, value, fill = category)) +
  geom_col(mapping = aes(fill = category),
    width = 0.5,
    position = 'identity'
  )+ 
  geom_text(aes(label = bar_labels),
            size = 1.5,
            color = 'white',
            vjust = 1,
            nudge_y = -200) +
  scale_x_continuous(
    name = 'Entering Year', 
    breaks = 2002:2022,
    expand = c(0, 0.25) #L is multiplicative, R is additive
  ) + 
  scale_y_continuous(
    name = 'Applications',
    expand = c(0, 0),
    limits = c(0, 70000),
    breaks = seq(0, 70000, 10000), 
    labels = scales::label_comma()
  ) + 
  scale_fill_manual(
    name = NULL,
    limits = c('applications', 'admitted_students', 'matriculants'),
    labels = c('Applications', 'Admitted Students', 'Matriculants'),
    values = c('#B6ACD1', '#836EAA', '#4E28A4')
  ) + 
  theme_classic() +
  theme(
    legend.justification = c(0.5, 1), 
    legend.position = 'inside', 
    legend.position.inside = c(0.5,1),
    legend.direction = 'horizontal',
    plot.title = element_text(hjust = 0.5, family = 'Jost'),
    axis.text = element_text(family = 'Arial'),
    axis.title = element_text('Georgia'),
    legend.text = element_text('Georgia')
  ) + 
  ggtitle('Northwestern University \nUndergraduate Admissions 2002-2022')
``` 

```{r}
#| label: exercise-3-lineplot
#| fig-width: 9
#| fig_height: 4

# data wrangling
rate_data <- admin_data |> 
  select(year, contains('_rate')) |> 
  pivot_longer(
    cols = -year,
    names_to = 'category',
    values_to = 'value'
  ) |>
  mutate(
    y_label = case_when(
      category == 'admission_rate' ~ value - 2,
      category == 'yield_rate' ~ value + 2
    ),
    rate_labels = str_c(value, '%') # str_c concatenates values into a string
  )

# legend labels (shape, line, fill, color)
legend_labels <- c('Admission Rate', 'Yield Rate')

# building the plot 
line_plot <- rate_data |>
  filter (year >= 2002) |>
  ggplot(aes(x = year, y = value)) + 
  geom_line(aes(color = category)) + 
  geom_point(aes(fill = category, shape = category), color = 'white', size = 2) + 
  scale_y_continuous(
    name = 'Rate', 
    breaks = seq(0, 65, 5), 
    limits = c(0, 68),
    labels = scales::label_percent(scale = 1),
    expand = c(0, 0)
  ) + 
  geom_text(
    aes(y = y_label, label = rate_labels),
    size = 2,
    color = 'grey40'
  ) + 
  scale_x_continuous(
    name = 'Entering Year', 
    breaks = 2002:2022,
    expand = c(0, 0.35)
  ) + 
  scale_shape_manual(
    name = NULL,
    values = c(21, 24),
    labels = legend_labels
  ) + 
  scale_color_manual(name = NULL, labels = legend_labels, values = c('#4E2A84', '#342F2E') ) + 
  scale_fill_manual(name = NULL, labels = legend_labels, values = c('#4E2A84', '#342F2E')) + 
  theme_classic() +
  theme(legend.justification = c(0.5, 1), 
        legend.position = 'inside',
        legend.position.inside = c(0.5, 1),
        legend.direction = 'horizontal',
        plot.title = element_text(hjust = 0.5, family = 'Jost'),
        axis.text = element_text(family = 'Arial'),
        axis.title = element_text('Jost'),
        legend.text = element_text('Georgia')
  ) + 
  ggtitle('Northwestern University \nUndergraduate Admissions 2002-2022')
```

```{r}
#| label: exercise-3-formatting 
#| fig-width: 9
#| fig-height: 8

bar_plot / line_plot

```

:::

## Challenge

:::{.callout-important icon=false}

Challenge is optional for all students, but we recommend trying them out!

:::

Using `cdc_small` dataset, re-create your own version inspired by the plot below.

**Must haves:**

-   Use two non-standard fonts (one for labeling the point and the other for the axes)
-   Use at least two colors (one for the added point, another for the rest of the points)
-   A curved arrow used to label the point

Using Bilbo Baggins' responses below to the CDC BRSFF questions, add Bilbo's data point to a scatterplot of `weight` by `height`.

-   `genhlth` - How would you rate your general health? **fair**
-   `exerany` - Have you exercised in the past month? **1=yes**
-   `hlthplan` - Do you have some form of health coverage? **0=no**
-   `smoke100` - Have you smoked at least 100 cigarettes in your life time? **1=yes**
-   `height` - height in inches: **46**
-   `weight` - weight in pounds: **120**
-   `wtdesire` - weight desired in pounds: **120**
-   `age` - in years: **45**
-   `gender` - m for males and f for females: **m**


:::{.callout-note}
Adding non-standard fonts can be an ***adventure***. I find this [blog post](https://cran.rstudio.com/web/packages/showtext/vignettes/introduction.html) to be extremely useful for adding fonts. Important packages for using non-standard fonts are `showtext`, `extrafont`, `extrafontdb`, and `sysfonts`. The last 3 generally just need to be installed (not loaded per session).
:::

*Hint:* 

- Create a new dataset (maybe call it `bilbo` or `bilbo_baggins`) using either `data.frame()` (base R - example in book) or `tibble()` (tidyverse - see help documentation for the function). Make sure to use variable names that exactly match `cdc`'s variable names. We have provided the `tidyverse` approach.
- Search google fonts to find some free fonts to use (can get free fonts from other locations)

::: {.callout-tip icon=false}

## Solution

```{r}
#| label: challenge
#| eval: false

# build dataset for Bilbo Baggins
bilbo <- tibble(
  genhlth  = "fair",
  exerany  = 1,
  hlthplan = 0,
  smoke100 = 1,
  height   = 46,
  weight   = 120,
  wtdesire = 120,
  age      = 45,
  gender   = "m"
)
```

:::
